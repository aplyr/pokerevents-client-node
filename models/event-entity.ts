/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { BlindLevelEntity } from './blind-level-entity';
// May contain unused imports in some cases
// @ts-ignore
import { DayEntity } from './day-entity';
// May contain unused imports in some cases
// @ts-ignore
import { EventMetaDto } from './event-meta-dto';
// May contain unused imports in some cases
// @ts-ignore
import { EventStatisticsDto } from './event-statistics-dto';
// May contain unused imports in some cases
// @ts-ignore
import { FestivalEntity } from './festival-entity';
// May contain unused imports in some cases
// @ts-ignore
import { LiveReportingEntity } from './live-reporting-entity';
// May contain unused imports in some cases
// @ts-ignore
import { PayoutEntity } from './payout-entity';
// May contain unused imports in some cases
// @ts-ignore
import { RegistrationEntity } from './registration-entity';
// May contain unused imports in some cases
// @ts-ignore
import { StateType } from './state-type';
// May contain unused imports in some cases
// @ts-ignore
import { VenueEntity } from './venue-entity';

/**
 * 
 * @export
 * @interface EventEntity
 */
export interface EventEntity {
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'id'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'festivalId'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'venueId'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'name'?: string | null;
    /**
     * 
     * @type {number}
     * @memberof EventEntity
     */
    'priority'?: number;
    /**
     * 
     * @type {StateType}
     * @memberof EventEntity
     */
    'state'?: StateType;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'description'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'summary'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'fromDate'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'toDate'?: string;
    /**
     * 
     * @type {string}
     * @memberof EventEntity
     */
    'thmId'?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof EventEntity
     */
    'photos'?: Array<string> | null;
    /**
     * 
     * @type {EventMetaDto}
     * @memberof EventEntity
     */
    'meta'?: EventMetaDto;
    /**
     * 
     * @type {EventStatisticsDto}
     * @memberof EventEntity
     */
    'statistics'?: EventStatisticsDto;
    /**
     * 
     * @type {FestivalEntity}
     * @memberof EventEntity
     */
    'festival'?: FestivalEntity;
    /**
     * 
     * @type {VenueEntity}
     * @memberof EventEntity
     */
    'venue'?: VenueEntity;
    /**
     * 
     * @type {Array<LiveReportingEntity>}
     * @memberof EventEntity
     */
    'liveReportings'?: Array<LiveReportingEntity> | null;
    /**
     * 
     * @type {Array<DayEntity>}
     * @memberof EventEntity
     */
    'days'?: Array<DayEntity> | null;
    /**
     * 
     * @type {Array<BlindLevelEntity>}
     * @memberof EventEntity
     */
    'blindLevels'?: Array<BlindLevelEntity> | null;
    /**
     * 
     * @type {Array<PayoutEntity>}
     * @memberof EventEntity
     */
    'payouts'?: Array<PayoutEntity> | null;
    /**
     * 
     * @type {Array<RegistrationEntity>}
     * @memberof EventEntity
     */
    'registrations'?: Array<RegistrationEntity> | null;
}



