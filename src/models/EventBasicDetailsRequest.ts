/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StateType } from './StateType';
import {
    StateTypeFromJSON,
    StateTypeFromJSONTyped,
    StateTypeToJSON,
} from './StateType';

/**
 * 
 * @export
 * @interface EventBasicDetailsRequest
 */
export interface EventBasicDetailsRequest {
    /**
     * 
     * @type {string}
     * @memberof EventBasicDetailsRequest
     */
    festivalId?: string;
    /**
     * 
     * @type {string}
     * @memberof EventBasicDetailsRequest
     */
    venueId?: string;
    /**
     * 
     * @type {string}
     * @memberof EventBasicDetailsRequest
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof EventBasicDetailsRequest
     */
    priority?: number;
    /**
     * 
     * @type {StateType}
     * @memberof EventBasicDetailsRequest
     */
    state?: StateType;
    /**
     * 
     * @type {string}
     * @memberof EventBasicDetailsRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof EventBasicDetailsRequest
     */
    summary?: string;
    /**
     * 
     * @type {Date}
     * @memberof EventBasicDetailsRequest
     */
    fromDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EventBasicDetailsRequest
     */
    toDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof EventBasicDetailsRequest
     */
    thmId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof EventBasicDetailsRequest
     */
    photos?: Array<string>;
}

/**
 * Check if a given object implements the EventBasicDetailsRequest interface.
 */
export function instanceOfEventBasicDetailsRequest(value: object): boolean {
    return true;
}

export function EventBasicDetailsRequestFromJSON(json: any): EventBasicDetailsRequest {
    return EventBasicDetailsRequestFromJSONTyped(json, false);
}

export function EventBasicDetailsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventBasicDetailsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'festivalId': json['festivalId'] == null ? undefined : json['festivalId'],
        'venueId': json['venueId'] == null ? undefined : json['venueId'],
        'name': json['name'] == null ? undefined : json['name'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'state': json['state'] == null ? undefined : StateTypeFromJSON(json['state']),
        'description': json['description'] == null ? undefined : json['description'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'fromDate': json['fromDate'] == null ? undefined : (new Date(json['fromDate'])),
        'toDate': json['toDate'] == null ? undefined : (new Date(json['toDate'])),
        'thmId': json['thmId'] == null ? undefined : json['thmId'],
        'photos': json['photos'] == null ? undefined : json['photos'],
    };
}

export function EventBasicDetailsRequestToJSON(value?: EventBasicDetailsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'festivalId': value['festivalId'],
        'venueId': value['venueId'],
        'name': value['name'],
        'priority': value['priority'],
        'state': StateTypeToJSON(value['state']),
        'description': value['description'],
        'summary': value['summary'],
        'fromDate': value['fromDate'] == null ? undefined : ((value['fromDate']).toISOString().substring(0,10)),
        'toDate': value['toDate'] == null ? undefined : ((value['toDate']).toISOString().substring(0,10)),
        'thmId': value['thmId'],
        'photos': value['photos'],
    };
}

