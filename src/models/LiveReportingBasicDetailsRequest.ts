/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StateType } from './StateType';
import {
    StateTypeFromJSON,
    StateTypeFromJSONTyped,
    StateTypeToJSON,
} from './StateType';

/**
 * 
 * @export
 * @interface LiveReportingBasicDetailsRequest
 */
export interface LiveReportingBasicDetailsRequest {
    /**
     * 
     * @type {string}
     * @memberof LiveReportingBasicDetailsRequest
     */
    dayId?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveReportingBasicDetailsRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof LiveReportingBasicDetailsRequest
     */
    description?: string;
    /**
     * 
     * @type {StateType}
     * @memberof LiveReportingBasicDetailsRequest
     */
    state?: StateType;
    /**
     * 
     * @type {Date}
     * @memberof LiveReportingBasicDetailsRequest
     */
    startsAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LiveReportingBasicDetailsRequest
     */
    finishedAt?: Date;
}

/**
 * Check if a given object implements the LiveReportingBasicDetailsRequest interface.
 */
export function instanceOfLiveReportingBasicDetailsRequest(value: object): boolean {
    return true;
}

export function LiveReportingBasicDetailsRequestFromJSON(json: any): LiveReportingBasicDetailsRequest {
    return LiveReportingBasicDetailsRequestFromJSONTyped(json, false);
}

export function LiveReportingBasicDetailsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveReportingBasicDetailsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'dayId': json['dayId'] == null ? undefined : json['dayId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'state': json['state'] == null ? undefined : StateTypeFromJSON(json['state']),
        'startsAt': json['startsAt'] == null ? undefined : (new Date(json['startsAt'])),
        'finishedAt': json['finishedAt'] == null ? undefined : (new Date(json['finishedAt'])),
    };
}

export function LiveReportingBasicDetailsRequestToJSON(value?: LiveReportingBasicDetailsRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'dayId': value['dayId'],
        'name': value['name'],
        'description': value['description'],
        'state': StateTypeToJSON(value['state']),
        'startsAt': value['startsAt'] == null ? undefined : ((value['startsAt'] as any).toISOString()),
        'finishedAt': value['finishedAt'] == null ? undefined : ((value['finishedAt'] as any).toISOString()),
    };
}

