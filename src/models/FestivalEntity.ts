/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FestivalEntity
 */
export interface FestivalEntity {
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    seasonId?: string;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    venueId?: string;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof FestivalEntity
     */
    fromDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof FestivalEntity
     */
    toDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    countryIso?: string;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    websiteUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof FestivalEntity
     */
    thmId?: string;
}

/**
 * Check if a given object implements the FestivalEntity interface.
 */
export function instanceOfFestivalEntity(value: object): boolean {
    return true;
}

export function FestivalEntityFromJSON(json: any): FestivalEntity {
    return FestivalEntityFromJSONTyped(json, false);
}

export function FestivalEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): FestivalEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'seasonId': json['seasonId'] == null ? undefined : json['seasonId'],
        'venueId': json['venueId'] == null ? undefined : json['venueId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'fromDate': json['fromDate'] == null ? undefined : (new Date(json['fromDate'])),
        'toDate': json['toDate'] == null ? undefined : (new Date(json['toDate'])),
        'countryIso': json['countryIso'] == null ? undefined : json['countryIso'],
        'websiteUrl': json['websiteUrl'] == null ? undefined : json['websiteUrl'],
        'thmId': json['thmId'] == null ? undefined : json['thmId'],
    };
}

export function FestivalEntityToJSON(value?: FestivalEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'seasonId': value['seasonId'],
        'venueId': value['venueId'],
        'name': value['name'],
        'description': value['description'],
        'fromDate': value['fromDate'] == null ? undefined : ((value['fromDate']).toISOString().substring(0,10)),
        'toDate': value['toDate'] == null ? undefined : ((value['toDate']).toISOString().substring(0,10)),
        'countryIso': value['countryIso'],
        'websiteUrl': value['websiteUrl'],
        'thmId': value['thmId'],
    };
}

