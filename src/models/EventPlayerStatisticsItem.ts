/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChipCountDto } from './ChipCountDto';
import {
    ChipCountDtoFromJSON,
    ChipCountDtoFromJSONTyped,
    ChipCountDtoToJSON,
} from './ChipCountDto';
import type { PlayerSummaryDto } from './PlayerSummaryDto';
import {
    PlayerSummaryDtoFromJSON,
    PlayerSummaryDtoFromJSONTyped,
    PlayerSummaryDtoToJSON,
} from './PlayerSummaryDto';

/**
 * 
 * @export
 * @interface EventPlayerStatisticsItem
 */
export interface EventPlayerStatisticsItem {
    /**
     * 
     * @type {PlayerSummaryDto}
     * @memberof EventPlayerStatisticsItem
     */
    player?: PlayerSummaryDto;
    /**
     * 
     * @type {Array<ChipCountDto>}
     * @memberof EventPlayerStatisticsItem
     */
    chipCountUpdates?: Array<ChipCountDto>;
}

/**
 * Check if a given object implements the EventPlayerStatisticsItem interface.
 */
export function instanceOfEventPlayerStatisticsItem(value: object): boolean {
    return true;
}

export function EventPlayerStatisticsItemFromJSON(json: any): EventPlayerStatisticsItem {
    return EventPlayerStatisticsItemFromJSONTyped(json, false);
}

export function EventPlayerStatisticsItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventPlayerStatisticsItem {
    if (json == null) {
        return json;
    }
    return {
        
        'player': json['player'] == null ? undefined : PlayerSummaryDtoFromJSON(json['player']),
        'chipCountUpdates': json['chipCountUpdates'] == null ? undefined : ((json['chipCountUpdates'] as Array<any>).map(ChipCountDtoFromJSON)),
    };
}

export function EventPlayerStatisticsItemToJSON(value?: EventPlayerStatisticsItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'player': PlayerSummaryDtoToJSON(value['player']),
        'chipCountUpdates': value['chipCountUpdates'] == null ? undefined : ((value['chipCountUpdates'] as Array<any>).map(ChipCountDtoToJSON)),
    };
}

