/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChipCountUpdateDto
 */
export interface ChipCountUpdateDto {
    /**
     * 
     * @type {string}
     * @memberof ChipCountUpdateDto
     */
    playerId?: string;
    /**
     * 
     * @type {number}
     * @memberof ChipCountUpdateDto
     */
    chipcount?: number;
    /**
     * 
     * @type {number}
     * @memberof ChipCountUpdateDto
     */
    progress?: number;
    /**
     * 
     * @type {number}
     * @memberof ChipCountUpdateDto
     */
    table?: number;
    /**
     * 
     * @type {number}
     * @memberof ChipCountUpdateDto
     */
    seat?: number;
}

/**
 * Check if a given object implements the ChipCountUpdateDto interface.
 */
export function instanceOfChipCountUpdateDto(value: object): boolean {
    return true;
}

export function ChipCountUpdateDtoFromJSON(json: any): ChipCountUpdateDto {
    return ChipCountUpdateDtoFromJSONTyped(json, false);
}

export function ChipCountUpdateDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChipCountUpdateDto {
    if (json == null) {
        return json;
    }
    return {
        
        'playerId': json['playerId'] == null ? undefined : json['playerId'],
        'chipcount': json['chipcount'] == null ? undefined : json['chipcount'],
        'progress': json['progress'] == null ? undefined : json['progress'],
        'table': json['table'] == null ? undefined : json['table'],
        'seat': json['seat'] == null ? undefined : json['seat'],
    };
}

export function ChipCountUpdateDtoToJSON(value?: ChipCountUpdateDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'playerId': value['playerId'],
        'chipcount': value['chipcount'],
        'progress': value['progress'],
        'table': value['table'],
        'seat': value['seat'],
    };
}

