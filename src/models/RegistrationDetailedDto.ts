/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ActualPrizeDto } from './ActualPrizeDto';
import {
    ActualPrizeDtoFromJSON,
    ActualPrizeDtoFromJSONTyped,
    ActualPrizeDtoToJSON,
} from './ActualPrizeDto';
import type { PayoutDetailsDto } from './PayoutDetailsDto';
import {
    PayoutDetailsDtoFromJSON,
    PayoutDetailsDtoFromJSONTyped,
    PayoutDetailsDtoToJSON,
} from './PayoutDetailsDto';
import type { PlayerSummaryDto } from './PlayerSummaryDto';
import {
    PlayerSummaryDtoFromJSON,
    PlayerSummaryDtoFromJSONTyped,
    PlayerSummaryDtoToJSON,
} from './PlayerSummaryDto';
import type { RegistrationStatisticsDto } from './RegistrationStatisticsDto';
import {
    RegistrationStatisticsDtoFromJSON,
    RegistrationStatisticsDtoFromJSONTyped,
    RegistrationStatisticsDtoToJSON,
} from './RegistrationStatisticsDto';

/**
 * 
 * @export
 * @interface RegistrationDetailedDto
 */
export interface RegistrationDetailedDto {
    /**
     * 
     * @type {string}
     * @memberof RegistrationDetailedDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof RegistrationDetailedDto
     */
    eventId?: string;
    /**
     * 
     * @type {string}
     * @memberof RegistrationDetailedDto
     */
    playerId?: string;
    /**
     * 
     * @type {string}
     * @memberof RegistrationDetailedDto
     */
    payoutId?: string;
    /**
     * 
     * @type {number}
     * @memberof RegistrationDetailedDto
     */
    position?: number;
    /**
     * 
     * @type {ActualPrizeDto}
     * @memberof RegistrationDetailedDto
     */
    prize?: ActualPrizeDto;
    /**
     * 
     * @type {RegistrationStatisticsDto}
     * @memberof RegistrationDetailedDto
     */
    statistics?: RegistrationStatisticsDto;
    /**
     * 
     * @type {PlayerSummaryDto}
     * @memberof RegistrationDetailedDto
     */
    player?: PlayerSummaryDto;
    /**
     * 
     * @type {PayoutDetailsDto}
     * @memberof RegistrationDetailedDto
     */
    payout?: PayoutDetailsDto;
}

/**
 * Check if a given object implements the RegistrationDetailedDto interface.
 */
export function instanceOfRegistrationDetailedDto(value: object): boolean {
    return true;
}

export function RegistrationDetailedDtoFromJSON(json: any): RegistrationDetailedDto {
    return RegistrationDetailedDtoFromJSONTyped(json, false);
}

export function RegistrationDetailedDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrationDetailedDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'eventId': json['eventId'] == null ? undefined : json['eventId'],
        'playerId': json['playerId'] == null ? undefined : json['playerId'],
        'payoutId': json['payoutId'] == null ? undefined : json['payoutId'],
        'position': json['position'] == null ? undefined : json['position'],
        'prize': json['prize'] == null ? undefined : ActualPrizeDtoFromJSON(json['prize']),
        'statistics': json['statistics'] == null ? undefined : RegistrationStatisticsDtoFromJSON(json['statistics']),
        'player': json['player'] == null ? undefined : PlayerSummaryDtoFromJSON(json['player']),
        'payout': json['payout'] == null ? undefined : PayoutDetailsDtoFromJSON(json['payout']),
    };
}

export function RegistrationDetailedDtoToJSON(value?: RegistrationDetailedDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'eventId': value['eventId'],
        'playerId': value['playerId'],
        'payoutId': value['payoutId'],
        'position': value['position'],
        'prize': ActualPrizeDtoToJSON(value['prize']),
        'statistics': RegistrationStatisticsDtoToJSON(value['statistics']),
        'player': PlayerSummaryDtoToJSON(value['player']),
        'payout': PayoutDetailsDtoToJSON(value['payout']),
    };
}

