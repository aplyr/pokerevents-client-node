/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PayoutEntity
 */
export interface PayoutEntity {
    /**
     * 
     * @type {string}
     * @memberof PayoutEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PayoutEntity
     */
    eventId?: string;
    /**
     * 
     * @type {string}
     * @memberof PayoutEntity
     */
    registrationId?: string;
    /**
     * 
     * @type {number}
     * @memberof PayoutEntity
     */
    position?: number;
    /**
     * 
     * @type {number}
     * @memberof PayoutEntity
     */
    prize?: number;
    /**
     * 
     * @type {number}
     * @memberof PayoutEntity
     */
    prizeUsd?: number;
}

/**
 * Check if a given object implements the PayoutEntity interface.
 */
export function instanceOfPayoutEntity(value: object): boolean {
    return true;
}

export function PayoutEntityFromJSON(json: any): PayoutEntity {
    return PayoutEntityFromJSONTyped(json, false);
}

export function PayoutEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayoutEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'eventId': json['eventId'] == null ? undefined : json['eventId'],
        'registrationId': json['registrationId'] == null ? undefined : json['registrationId'],
        'position': json['position'] == null ? undefined : json['position'],
        'prize': json['prize'] == null ? undefined : json['prize'],
        'prizeUsd': json['prizeUsd'] == null ? undefined : json['prizeUsd'],
    };
}

export function PayoutEntityToJSON(value?: PayoutEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'eventId': value['eventId'],
        'registrationId': value['registrationId'],
        'position': value['position'],
        'prize': value['prize'],
        'prizeUsd': value['prizeUsd'],
    };
}

