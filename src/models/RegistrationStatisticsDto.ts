/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChipCountDto } from './ChipCountDto';
import {
    ChipCountDtoFromJSON,
    ChipCountDtoFromJSONTyped,
    ChipCountDtoToJSON,
} from './ChipCountDto';

/**
 * 
 * @export
 * @interface RegistrationStatisticsDto
 */
export interface RegistrationStatisticsDto {
    /**
     * 
     * @type {boolean}
     * @memberof RegistrationStatisticsDto
     */
    isBusted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RegistrationStatisticsDto
     */
    reEntries?: number;
    /**
     * 
     * @type {number}
     * @memberof RegistrationStatisticsDto
     */
    addOns?: number;
    /**
     * 
     * @type {number}
     * @memberof RegistrationStatisticsDto
     */
    seat?: number;
    /**
     * 
     * @type {number}
     * @memberof RegistrationStatisticsDto
     */
    table?: number;
    /**
     * 
     * @type {number}
     * @memberof RegistrationStatisticsDto
     */
    bounty?: number;
    /**
     * 
     * @type {ChipCountDto}
     * @memberof RegistrationStatisticsDto
     */
    chipCount?: ChipCountDto;
    /**
     * 
     * @type {Date}
     * @memberof RegistrationStatisticsDto
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the RegistrationStatisticsDto interface.
 */
export function instanceOfRegistrationStatisticsDto(value: object): boolean {
    return true;
}

export function RegistrationStatisticsDtoFromJSON(json: any): RegistrationStatisticsDto {
    return RegistrationStatisticsDtoFromJSONTyped(json, false);
}

export function RegistrationStatisticsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrationStatisticsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'isBusted': json['isBusted'] == null ? undefined : json['isBusted'],
        'reEntries': json['reEntries'] == null ? undefined : json['reEntries'],
        'addOns': json['addOns'] == null ? undefined : json['addOns'],
        'seat': json['seat'] == null ? undefined : json['seat'],
        'table': json['table'] == null ? undefined : json['table'],
        'bounty': json['bounty'] == null ? undefined : json['bounty'],
        'chipCount': json['chipCount'] == null ? undefined : ChipCountDtoFromJSON(json['chipCount']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function RegistrationStatisticsDtoToJSON(value?: RegistrationStatisticsDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'isBusted': value['isBusted'],
        'reEntries': value['reEntries'],
        'addOns': value['addOns'],
        'seat': value['seat'],
        'table': value['table'],
        'bounty': value['bounty'],
        'chipCount': ChipCountDtoToJSON(value['chipCount']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

