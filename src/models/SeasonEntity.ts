/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SeasonEntity
 */
export interface SeasonEntity {
    /**
     * 
     * @type {string}
     * @memberof SeasonEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SeasonEntity
     */
    tourId?: string;
    /**
     * 
     * @type {string}
     * @memberof SeasonEntity
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SeasonEntity
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof SeasonEntity
     */
    year?: number;
    /**
     * 
     * @type {string}
     * @memberof SeasonEntity
     */
    thmCode?: string;
}

/**
 * Check if a given object implements the SeasonEntity interface.
 */
export function instanceOfSeasonEntity(value: object): boolean {
    return true;
}

export function SeasonEntityFromJSON(json: any): SeasonEntity {
    return SeasonEntityFromJSONTyped(json, false);
}

export function SeasonEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): SeasonEntity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'tourId': json['tourId'] == null ? undefined : json['tourId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'year': json['year'] == null ? undefined : json['year'],
        'thmCode': json['thmCode'] == null ? undefined : json['thmCode'],
    };
}

export function SeasonEntityToJSON(value?: SeasonEntity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'tourId': value['tourId'],
        'name': value['name'],
        'description': value['description'],
        'year': value['year'],
        'thmCode': value['thmCode'],
    };
}

