/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorTypes } from './ErrorTypes';
import {
    ErrorTypesFromJSON,
    ErrorTypesFromJSONTyped,
    ErrorTypesToJSON,
} from './ErrorTypes';

/**
 * 
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * 
     * @type {ErrorTypes}
     * @memberof ModelError
     */
    code?: ErrorTypes;
    /**
     * 
     * @type {string}
     * @memberof ModelError
     */
    message?: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ModelError
     */
    readonly params?: { [key: string]: any; };
}

/**
 * Check if a given object implements the ModelError interface.
 */
export function instanceOfModelError(value: object): boolean {
    return true;
}

export function ModelErrorFromJSON(json: any): ModelError {
    return ModelErrorFromJSONTyped(json, false);
}

export function ModelErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelError {
    if (json == null) {
        return json;
    }
    return {
        
        'code': json['code'] == null ? undefined : ErrorTypesFromJSON(json['code']),
        'message': json['message'] == null ? undefined : json['message'],
        'params': json['params'] == null ? undefined : json['params'],
    };
}

export function ModelErrorToJSON(value?: Omit<ModelError, 'params'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'code': ErrorTypesToJSON(value['code']),
        'message': value['message'],
    };
}

