/* tslint:disable */
/* eslint-disable */
/**
 * PokerEvents.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChipInformationSource } from './ChipInformationSource';
import {
    ChipInformationSourceFromJSON,
    ChipInformationSourceFromJSONTyped,
    ChipInformationSourceToJSON,
} from './ChipInformationSource';

/**
 * 
 * @export
 * @interface ChipCountDto
 */
export interface ChipCountDto {
    /**
     * 
     * @type {number}
     * @memberof ChipCountDto
     */
    value?: number;
    /**
     * 
     * @type {number}
     * @memberof ChipCountDto
     */
    progress?: number;
    /**
     * 
     * @type {ChipInformationSource}
     * @memberof ChipCountDto
     */
    source?: ChipInformationSource;
    /**
     * 
     * @type {Date}
     * @memberof ChipCountDto
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the ChipCountDto interface.
 */
export function instanceOfChipCountDto(value: object): boolean {
    return true;
}

export function ChipCountDtoFromJSON(json: any): ChipCountDto {
    return ChipCountDtoFromJSONTyped(json, false);
}

export function ChipCountDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChipCountDto {
    if (json == null) {
        return json;
    }
    return {
        
        'value': json['value'] == null ? undefined : json['value'],
        'progress': json['progress'] == null ? undefined : json['progress'],
        'source': json['source'] == null ? undefined : ChipInformationSourceFromJSON(json['source']),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function ChipCountDtoToJSON(value?: ChipCountDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'value': value['value'],
        'progress': value['progress'],
        'source': ChipInformationSourceToJSON(value['source']),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

